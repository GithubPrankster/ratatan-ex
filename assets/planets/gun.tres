[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode diffuse_lambert_wrap, unshaded;

uniform vec4 mixer : hint_color = vec4(1.0);

vec4 fromLinear(vec4 linearRGB)
{
    bvec4 cutoff = lessThan(linearRGB, vec4(0.0031308));
    vec4 higher = vec4(1.055)*pow(linearRGB, vec4(1.0/2.4)) - vec4(0.055);
    vec4 lower = linearRGB * vec4(12.92);

    return mix(higher, lower, cutoff);
}

void vertex()
{
	if(OUTPUT_IS_SRGB){
		COLOR = fromLinear(COLOR);
	}
}

void fragment()
{
	ALBEDO = mixer.rgb * COLOR.rgb;
}"

[resource]
shader = SubResource( 1 )
shader_param/mixer = Color( 0.294118, 0.298039, 0.360784, 1 )
